name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test -- --watchAll=false
      
    - name: Build React application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
        
    - name: Terraform Init
      run: |
        cd infra/
        terraform init
        
    - name: Terraform Plan
      run: |
        cd infra/
        terraform plan -out=tfplan
        
    - name: Terraform Apply
      run: |
        cd infra/
        terraform apply -auto-approve tfplan
        
    - name: Get CloudFront URL
      id: get-url
      run: |
        cd infra/
        echo "cloudfront_url=$(terraform output -raw cloudfront_url)" >> $GITHUB_OUTPUT
        
    - name: Invalidate CloudFront Cache
      run: |
        cd infra/
        DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        
    - name: Display deployment info
      run: |
        echo "Deployment ok"
        echo "CloudFront : ${{ steps.get-url.outputs.cloudfront_url }}"
  